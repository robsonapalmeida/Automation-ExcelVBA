Option Explicit
Public i As Integer
Public Abrir As Boolean
Public getAddressColumn, ColumnJ, ColumnK As Variant
Public ColumnAA, ColumnAB, ColumnAF, ColumnU, ColumnV, ColumnN, ColumnO, ColumnAD, ColumnAE, ColumnY, ColumnSS, ColumnT, ColumnAC, ColumnG As Variant
Public ProgramaPrincipalEmExecucao   As Boolean
Public contador_Change, j As Integer
Public procurar As Variant
Public EndLine As Integer
Public ValorFormatado, Loja_Matricula As String
Public FileNameFerias  As String
Public ColorS As String
Public x As Variant
Public dia, mes, ano As Integer
Public QtdeDiasNoMes As Integer
Public QtdeDiasNoMesAnterior As Integer

Public IsAdmitidoNoMesCompetencia   As Boolean
Public IsAdmitidoNoMesAnterior As Boolean
Public MontaUltimoDiaMesAdmissao As Date
Public Piso As Double
Public IsCargoVendedor As Boolean
Public WBV, WBF, WB As Workbook

Sub CalcPlan()

  Dim EndLineVendedor As Integer
  Dim EndLineGerentes As Integer
  Dim JsKs As String
  
  
  Dim comissao, DSR, premio As Variant
  Dim ErrosDetectados As Boolean
  Dim AAsAbs, AFs As String
  Dim Abertura_Loja As Double
  Dim EndLineClayton As Integer
  
 
  Dim QuantideDiaFerias As Variant
  Dim Percentual As Integer
  
  ProgramaPrincipalEmExecucao = True
  
  contador_Change = 0
  Application.ScreenUpdating = False
  EndLine = Range("A" & Rows.Count).End(xlUp).Row
  Abrir = True
  
  'Escolhendo o arquivo férias correto. (Sempre utilizará o último, sendo esse pela lógica o arquivo corrente)
  'Foi a alternativa que consegui para fazer com que funcionasse havendo no caso, mais que um arquivo de férias
 
  
  
  'Esse função usa a variável global FileNameFerias
  'Abre as planilhas vendas e férias, faz o set da planilha principal para variável WB que auxiliam no resto do código
  Call open_close_SetPlanilhasAuxiliares(Abrir)
  
  EndLineVendedor = WBV.Worksheets("Vendedor").Range("A" & Rows.Count).End(xlUp).Row
  EndLineGerentes = WBV.Worksheets("Gerentes").Range("B" & Rows.Count).End(xlUp).Row
  Range("V3:V" & EndLine).NumberFormat = "General"
  
  Sheet1.ProgressBar1.Min = 0
  Sheet1.ProgressBar1.Max = EndLine
 
  'COntador da planilha erros!
  j = 2
  'Limpa celulas da planilha de erros
  Sheet17.Cells.Range("A3:A" & EndLine).Clear

  'Abrindo para gravação arquivo texto para importação de eventos no ProSoft
  Open ThisWorkbook.Path & "\ImportaEventosProSoft.txt" For Output As #1
  
  ColorS = "VbBlue"
  
  For i = 3 To EndLine
    
    IsAdmitidoNoMesAnterior = False
    IsAdmitidoNoMesCompetencia = False
    QtdeDiasNoMes = 0
    QtdeDiasNoMesAnterior = 0
    ano = 0
    mes = 0
    MontaUltimoDiaMesAdmissao = 0
    IsCargoVendedor = False
     
    'Barra de progresso para vc saber onde está
    Percentual = (i - 1) / (EndLine - 1) * 100
    Application.StatusBar = "Calculando dados da planilha... " & Percentual & "%"

    'Usado para o procv abaixo
    Loja_Matricula = Sheet1.Cells(i, "C").Value
    
    'obtem os dados da planilha vendas e grava abaixo comissao, DSR e premio
    comissao = Application.VLookup(Loja_Matricula, Workbooks("Vendas.xlsm").Worksheets("Vendedor").Range("P5:S" & EndLineVendedor), 2, 0)
    
    If (Trim(Sheet1.Cells(i, "E").Value) = "GERENTE DE LOJA") Then
      comissao = Application.VLookup(CInt(Sheet1.Cells(i, "A").Value), Workbooks("Vendas.xlsm").Worksheets("Gerentes").Range("B4:Q" & EndLineGerentes), 14, 0)
    End If
    
    If IsError(comissao) Then
      
      ErrosDetectados = True
      If (Trim(Sheet1.Cells(i, "E").Value) <> "ASSISTENTE DE LOJA") Then
        j = j + 1
        Sheet17.Cells(j, "A").Value = "Alerta - Vendedor não encontrado na planilha vendas.xlsm " & Loja_Matricula & " Linha-" & i & " Pasta Base"
      End If
    Else
      Sheet1.Cells(i, "AA").Value = comissao
      
      If comissao > 0 Then
        Call Change_Color(Sheet1.Cells, "AA", ColorS, i)
      End If
      
      DSR = Application.VLookup(Loja_Matricula, Workbooks("Vendas.xlsm").Worksheets("Vendedor").Range("P5:S" & EndLineVendedor), 3, 0)
      
      If (Trim(Sheet1.Cells(i, "E").Value) = "GERENTE DE LOJA") Then
        DSR = Application.VLookup(CInt(Sheet1.Cells(i, "A").Value), Workbooks("Vendas.xlsm").Worksheets("Gerentes").Range("B4:Q" & EndLineGerentes), 15, 0)
      End If
      
      Sheet1.Cells(i, "AB").Value = DSR
      
      If DSR > 0 Then
        Call Change_Color(Sheet1.Cells, "AB", ColorS, i)
      End If
      
      premio = Application.VLookup(Loja_Matricula, Workbooks("Vendas.xlsm").Worksheets("Vendedor").Range("P5:S" & EndLineVendedor), 4, 0)
      
      If (Trim(Sheet1.Cells(i, "E").Value) = "GERENTE DE LOJA") Then
        premio = Application.VLookup(CInt(Sheet1.Cells(i, "A").Value), Workbooks("Vendas.xlsm").Worksheets("Gerentes").Range("B4:Q" & EndLineGerentes), 16, 0)
      End If
      
      Sheet1.Cells(i, "AD").Value = premio
      
      If premio > 0 Then
        Call Change_Color(Sheet1.Cells, "AD", ColorS, i)
      End If
      
    End If
  
    IsCargoVendedor = Mid(Trim(UCase(Sheet1.Cells(i, "E").Value)), 1, 8) = "VENDEDOR"
    
    If IsCargoVendedor Then
      Call ApuraDiasMes_MesAnterior(QtdeDiasNoMes, IsAdmitidoNoMesCompetencia, QtdeDiasNoMesAnterior, IsAdmitidoNoMesAnterior, i)
      Piso = Apura_Piso(QtdeDiasNoMes, IsAdmitidoNoMesCompetencia, QtdeDiasNoMesAnterior, IsAdmitidoNoMesAnterior, i, Sheet1.Cells)
    End If
    
    If i = 70 Then
      x = 1
    End If
    
    'Grava na coluna K, quantidade de dias de férias
    'Obviamente que aqui, o programa busca o contratado em questão na planilha Férias
    Call BuscaQtdeDiasFerias(Sheet1.Cells(i, "D").Value, Sheet1.Cells, i, Sheet18.Cells(5, "B").Value)
 
    Sheet1.Cells(i, "U").Value = Reapura_U(Sheet1.Cells, i, j, Loja_Matricula)
    Call Change_Color(Sheet1.Cells, "U", ColorS, i)
    
    'Coluna J DIAS ATIVOS NA FOLHA - AUTOMATIZADA
    JsKs = "J" & i & ":K" & i
    
    Sheet1.Cells(i, "J").Value = 30 - Sheet1.Cells(i, "K").Value
    Call Change_Color(Sheet1.Cells, "J", ColorS, i)
   
    'Coluna L Total - AUTOMATIZADA
    Sheet1.Cells(i, "L").Value = WorksheetFunction.Sum(Range(JsKs))
    Call Change_Color(Sheet1.Cells, "L", ColorS, i)
        
    'Coluna V 6% VT - AUTOMATIZADA
    'Aqui, caso a loja seja 175, o valor na coluna V deve ser o Sal. fixo
    Sheet1.Cells(i, "V").Value = Reapura_V(Sheet1.Cells, i, Piso)
    
    If Sheet1.Cells(i, "V").Value Then
        Call Change_Color(Sheet1.Cells, "V", ColorS, i)
    End If
    
    'Coluna W Desconto VT Folha
    Sheet1.Cells(i, "W").Value = Reapura_W(Sheet1.Cells, i)
    Call Change_Color(Sheet1.Cells, "W", ColorS, i)
    
    'Coluna Y Desconto VT Folha
    Sheet1.Cells(i, "Y").Value = Reapura_Y(Sheet1.Cells, i)
    Call Change_Color(Sheet1.Cells, "Y", ColorS, i)
    
    'Coluna AE Total
    Sheet1.Cells(i, "AE").Value = Reapura_AE(Sheet1.Cells, i)
    If Sheet1.Cells(i, "AE").Value > 0 Then
      Call Change_Color(Sheet1.Cells, "AE", ColorS, i)
    End If
    
    'Coluna AF
    Sheet1.Cells(i, "AF").Value = Reapura_AF(Sheet1.Cells, i)
    If Sheet1.Cells(i, "AF").Value > 0 Then
      Call Change_Color(Sheet1.Cells, "AF", ColorS, i)
    End If
    
    'Planilha Clayton
    'Necessário abir essa porque ao chega aqui, a planilha ativa é Base, e para efetuar essa busca, precisa que essa pasta esteja ativa
    WB.Worksheets("Prêmio_Clayton").Activate
      Call EncontrePorNome(Sheet1.Cells(i, "D").Value, Sheet1.Cells, i)
      
    'Volta a ativar a planilha principal - Base antes de ir para o próximo registro
    WB.Worksheets(1).Activate
    
    'Incrementa progressBar
    
    Sheet1.ProgressBar1.Value = i
    
    'Gravação de Eventos
    Call GravaTodosEventos
    
  Next i
    
  'Fecha arquivo texto que recebeu gravação dos eventos
  Close #1
  
    ProgramaPrincipalEmExecucao = False
    Application.ScreenUpdating = True
    Application.DisplayAlerts = True
 
    If ErrosDetectados = True Then
      MsgBox "Alerta - Alguns 'vendedores' não foram encontrados na planilha vendas.xlsm verifique pasta """"Inconsistências"""""
    End If
     
    'Abrir é false nesse momento, então, ele vai fechar as planilhas auxiliares abertas
    
    open_close_SetPlanilhasAuxiliares (Abrir)
    
    WB.Worksheets(1).Activate
    Sheet1.ProgressBar1.Value = 0
    Range("K70").Select
  
End Sub

'Controla tudo que necessita ser recalculado a partir de uma alteração feita pelo usuário em determinadas células


Private Sub Worksheet_Change(ByVal Target As Range)
  contador_Change = contador_Change + 1
  If contador_Change = 1 Then

    getAddressColumn = CStr(Target.Address)
    ColumnJ = InStr(getAddressColumn, "J")
    ColumnK = InStr(getAddressColumn, "K")
    ColumnAA = InStr(getAddressColumn, "AA")
    ColumnAB = InStr(getAddressColumn, "AB")
    ColumnAF = InStr(getAddressColumn, "AF")
    ColumnU = InStr(getAddressColumn, "U")
    ColumnV = InStr(getAddressColumn, "V")
    ColumnN = InStr(getAddressColumn, "N")
    ColumnO = InStr(getAddressColumn, "O")
    ColumnAD = InStr(getAddressColumn, "AD")
    ColumnAE = InStr(getAddressColumn, "AE")
    ColumnY = InStr(getAddressColumn, "Y")
    ColumnSS = InStr(getAddressColumn, "S")
    ColumnT = InStr(getAddressColumn, "T")
    ColumnAC = InStr(getAddressColumn, "AC")
    ColumnG = InStr(getAddressColumn, "G")


    'Ou seja, se houve alteração em qq uma dessas colunas pela ação do usuário, elas são recalculadas
    'Sendo L a somatoria de J e K representado por Reapura_L, e Repura_J que ao detectar alteração em J ou K, reapura J

    If (ColumnJ > 0) Or (ColumnK > 0) Then
      Call Reapura_J(Sheet1.Cells, Target.Row)
      Call Reapura_L(Sheet1.Cells, Target.Row)
      
    End If

    'Ou seja, se houve alteração em qq uma dessas colunas(AA e AB e AF) pela ação do usuário, elas são recalculadas
    'Sendo V a somatoria de AA e AB e AF

    If (ColumnAA > 0) Or (ColumnAB > 0) Or (ColumnAF > 0) Then
      Sheet1.Cells(Target.Row, "V").Value = Reapura_V(Sheet1.Cells, Target.Row, Piso)
    End If

    If (ColumnU > 0) Or (ColumnV > 0) Or (ColumnAA > 0) Or (ColumnAB > 0) Or (ColumnAD > 0) Then
      Sheet1.Cells(Target.Row, "W").Value = Reapura_W(Sheet1.Cells, Target.Row)
    End If

    If (ColumnN > 0) Or (ColumnO > 0) Or (ColumnJ > 0) Then
      Sheet1.Cells(Target.Row, "Y").Value = Reapura_Y(Sheet1.Cells, Target.Row)
    End If

    If (ColumnAA > 0) Or (ColumnAB > 0) Or (ColumnAC > 0) Or (ColumnAD > 0) Or (ColumnY > 0) Then
      Sheet1.Cells(Target.Row, "AE").Value = Reapura_AE(Sheet1.Cells, Target.Row)
      Sheet1.Cells(Target.Row, "AF").Value = Reapura_AF(Sheet1.Cells, Target.Row)
      Sheet1.Cells(Target.Row, "V").Value = Reapura_V(Sheet1.Cells, Target.Row, Piso)
    End If

     If (ColumnAE > 0) Or (ColumnY > 0) Or (ColumnN > 0) Or (ColumnO > 0) Or (ColumnJ > 0) Then
      Sheet1.Cells(Target.Row, "AF").Value = Reapura_AF(Sheet1.Cells, Target.Row)
    End If

     If (ColumnSS > 0) Or (ColumnT > 0) Then
      Sheet1.Cells(Target.Row, "U").Value = Reapura_U(Sheet1.Cells, Target.Row, j, Loja_Matricula)
    End If

    If (ColumnG > 0) And IsCargoVendedor Then
      QtdeDiasNoMes = 0
      IsAdmitidoNoMesCompetencia = False
      QtdeDiasNoMesAnterior = 0
      IsAdmitidoNoMesAnterior = False
      Call ApuraDiasMes_MesAnterior(QtdeDiasNoMes, IsAdmitidoNoMesCompetencia, QtdeDiasNoMesAnterior, IsAdmitidoNoMesAnterior, Target.Row)
      Piso = Apura_Piso(QtdeDiasNoMes, IsAdmitidoNoMesCompetencia, QtdeDiasNoMesAnterior, IsAdmitidoNoMesAnterior, Target.Row, Sheet1.Cells)
      Sheet1.Cells(Target.Row, "V").Value = Reapura_V(Sheet1.Cells, Target.Row, Piso)
      Sheet1.Cells(Target.Row, "W").Value = Reapura_W(Sheet1.Cells, Target.Row)
    End If
    
    
  
    If (ColumnK > 0) And (Not ProgramaPrincipalEmExecucao) Then
       Abrir = True
       
       verificaArquivoFeriasAberto (Sheet18.Cells(5, "B").Value)
       Call open_close_SetPlanilhasAuxiliares(Abrir)
       Call BuscaQtdeDiasFerias(Sheet1.Cells(Target.Row, "D").Value, Sheet1.Cells, Target.Row, Sheet18.Cells(5, "B").Value)
       Abrir = False
       Call open_close_SetPlanilhasAuxiliares(Abrir)
    End If
    
    contador_Change = 0
    

  End If

End Sub

'Dias Ativo
Sub Reapura_J(acells As Range, Aline As Integer)
  acells.Cells(Aline, "J").Value = acells.Cells(Aline, "J").Value - acells.Cells(Aline, "K").Value
End Sub

'Total Dias
Sub Reapura_L(acells As Range, Aline As Integer)
  acells.Cells(Aline, "L").Value = acells.Cells(Aline, "J").Value + acells.Cells(Aline, "K").Value
  
End Sub

'VT 6%
Function Reapura_V(acells As Range, Aline As Integer, Piso As Double)
Dim valor As Double
valor = 0

   If Aline = 14 Then
     x = 0
   End If
   
   If (acells.Cells(Aline, "A").Value = 175) Or (acells.Cells(Aline, "A").Value = 126) Then
      valor = Piso + CDbl(FormatNumber(acells.Cells(Aline, "N").Value, 2))
      Reapura_V = valor * (6 / 100)
    Else
      Reapura_V = (acells.Cells(Aline, "AA").Value + acells.Cells(Aline, "AB").Value + Piso + acells.Cells(Aline, "AF").Value) * (6 / 100)
    End If
    
End Function

'VT comparação
Function Reapura_W(acells As Range, Aline As Integer)

     '=IF(U>V;V;U)
    If Aline = 14 Then
      x = 0
    End If
    Reapura_W = acells.Cells(Aline, "U").Value
    If (acells.Cells(Aline, "U").Value > acells.Cells(Aline, "V").Value) Or (acells.Cells(Aline, "U").Value = 0) Then
      Reapura_W = acells.Cells(Aline, "V").Value
    End If
    'Implementado dia 03/08/2021
    If (acells.Cells(Aline, "U").Value = 0) And (Trim(acells.Cells(Aline, "S").Value) <> "Fretado") Then
      Reapura_W = 0
    End If
    
End Function

'Total variáveis
Function Reapura_Y(acells As Range, Aline As Integer)
    ''=SUM(N3:O3)/30*J3
    Reapura_Y = ((acells.Cells(Aline, "N").Value + acells.Cells(Aline, "O").Value) / (30) * (acells.Cells(Aline, "J").Value))
  
End Function


'Total variáveis
Function Reapura_AE(acells As Range, Aline As Integer)
  If IsError(acells.Cells(Aline, "AA").Value) Or IsError(acells.Cells(Aline, "AB").Value) + IsError(acells.Cells(Aline, "AC").Value) + IsError(acells.Cells(Aline, "AD").Value) Then
    Sheet17.Cells(100, "A").Value = "alerta na linha " & Aline & " valores das celulas AA, AB, AC, AD não encontrado"
  Else
    Reapura_AE = (acells.Cells(Aline, "AA").Value) + (acells.Cells(Aline, "AB").Value) + (acells.Cells(Aline, "AC").Value) + (acells.Cells(Aline, "AD").Value)
  End If
  'Reapura_AE = WorksheetFunction.Sum(Acells.Range("AA" & ALine & ":AD" & ALine))
                                                    
End Function


Function Reapura_AF(acells As Range, Aline As Integer)
    '=IF(AE3<Y3;Y3-AE3;0)
    Reapura_AF = 0
    If acells.Cells(Aline, "AE").Value < acells.Cells(Aline, "Y").Value Then
      Reapura_AF = ((acells.Cells(Aline, "Y").Value) - (acells.Cells(Aline, "AE").Value))
    End If
  
End Function

'Total variáveis
Function Reapura_U(acells As Range, Aline As Integer, ByVal AJ As Integer, ALoja_Matricula As String)
  If IsNumeric(acells.Cells(Aline, "S").Value) And IsNumeric(acells.Cells(Aline, "T").Value) Then
    Reapura_U = (acells.Cells(Aline, "S").Value + acells.Cells(Aline, "T").Value)
  Else
    Reapura_U = 0
    Sheet17.Cells(AJ, "A").Value = "Coluna U foi zerada. Motivo:Coluna U, utiliza as Celulas S e T, uma das duas não é um valor, verifique  " & ALoja_Matricula & " Linha-" & Aline & " Pasta Base"
  End If
  
End Function



Public Sub EncontrePorNome(ANome As String, acells As Range, Aline)

Set procurar = Worksheets("Prêmio_Clayton").Cells.Find(What:=ANome, After:=ActiveCell, _
LookIn:=xlValues, LookAt:=xlPart, SearchOrder:=xlByRows, _
SearchDirection:=xlNext, MatchCase:=False)
 
If Not (procurar Is Nothing) Then
   
   If procurar.Column = 3 Then
     If procurar.Cells.Find(ANome).Offset(0, 5) > 0 Then
        acells.Cells(Aline, "AG").Value = FormatNumber(procurar.Cells.Find(ANome).Offset(0, 5), 2)
        acells.Cells(Aline, "AG").Interior.Color = vbBlack
        acells.Cells(Aline, "AG").Font.Color = vbWhite
        acells.Cells(Aline, "AG").Font.Bold = True
     End If
     
     If (procurar.Cells.Find(ANome).Offset(0, 6).Value > 0) Or (procurar.Cells.Find(ANome).Offset(0, 7).Value) Then
        acells.Cells(Aline, "AC").Value = FormatNumber(((procurar.Cells.Find(ANome).Offset(0, 6).Value) + (procurar.Cells.Find(ANome).Offset(0, 7).Value)), 2)
        acells.Cells(Aline, "AC").Interior.Color = vbBlack
        acells.Cells(Aline, "AC").Font.Color = vbWhite
        acells.Cells(Aline, "AC").Font.Bold = True
     End If
   
   End If
End If

End Sub

Public Sub BuscaQtdeDiasFerias(ANome As String, acells As Range, Aline, AWorkBook As String)
Dim QtdeDiasFerias As Integer
Dim PAIF As Variant
Dim dtGozoInicio, dtGozoFim As Date
Dim MontaUltimoDiaMesFeriasInicioGozo As Date
Dim diaFIG, mesFIG, anoFIG As Integer
Dim diaFFG, mesFFG, anoFFG As Integer
Dim MontaUltimoDiaMesFeriasFimGozo As Date
Dim BuscaQtdeDiasFerias As Integer
BuscaQtdeDiasFerias = 0
Set procurar = Workbooks(AWorkBook).Worksheets(1).Cells.Find(What:=ANome, After:=ActiveCell, _
LookIn:=xlValues, LookAt:=xlPart, SearchOrder:=xlByRows, _
SearchDirection:=xlNext, MatchCase:=False)
 
If Not (procurar Is Nothing) Then
     
     PAIF = Split(procurar.Cells.Find(ANome).Offset(0, 5), "a")
     
     dtGozoInicio = CDate(PAIF(0))
       diaFIG = DatePart("d", dtGozoInicio)
       mesFIG = DatePart("m", dtGozoInicio)
       anoFIG = DatePart("yyyy", dtGozoInicio)
     
     dtGozoFim = CDate(PAIF(1))
     
       diaFFG = DatePart("d", dtGozoInicio)
       mesFFG = DatePart("m", dtGozoInicio)
       anoFFG = DatePart("yyyy", dtGozoInicio)
     
     If Month(dtGozoFim) = Month(Sheet18.Cells(3, "B").Value - 1) Then
       BuscaQtdeDiasFerias = 0
     ElseIf Month(dtGozoFim) = Month(Sheet18.Cells(3, "B").Value) Then
       If Month(dtGozoInicio) = Month(Sheet18.Cells(3, "B").Value) Then
         BuscaQtdeDiasFerias = (dtGozoFim - dtGozoInicio) + 1
       ElseIf Month(dtGozoInicio) = Month(Sheet18.Cells(3, "B").Value) - 1 Then
         MontaUltimoDiaMesFeriasInicioGozo = DateSerial(anoFIG, Month(Sheet18.Cells(3, "B").Value), 1)
         BuscaQtdeDiasFerias = (dtGozoFim - MontaUltimoDiaMesFeriasInicioGozo) + 1
       End If
     ElseIf (Month(dtGozoFim) = Month(Sheet18.Cells(3, "B").Value) + 1) And (Month(dtGozoInicio) = Month(Sheet18.Cells(3, "B").Value)) Then
       MontaUltimoDiaMesFeriasFimGozo = DateSerial(anoFFG, mesFFG, 30)
       BuscaQtdeDiasFerias = (MontaUltimoDiaMesFeriasFimGozo - dtGozoInicio) + 1
     
     End If
     
     
     If BuscaQtdeDiasFerias > 0 Then
       acells.Cells(Aline, "K").Value = BuscaQtdeDiasFerias
       acells.Cells(Aline, "K").Interior.Color = vbRed
       acells.Cells(Aline, "K").Font.Color = vbWhite
       acells.Cells(Aline, "K").Font.Bold = True
     End If
End If

End Sub

Sub Limpa()

   EndLine = Range("A" & Rows.Count).End(xlUp).Row
   
   Sheet1.Range("J3:K" & EndLine).Interior.Color = vbWhite
   Sheet1.Range("J3:K" & EndLine).Font.Color = vbBlack
   Sheet1.Range("J3:K" & EndLine).Font.Bold = False
    
   Sheet1.Range("K3:K" & EndLine).Interior.Color = vbWhite
   Sheet1.Range("K3:K" & EndLine).Font.Color = vbBlack
   Sheet1.Range("K3:K" & EndLine).Font.Bold = False
   
   Sheet1.Range("AC3:AC" & EndLine).Interior.Color = vbWhite
   Sheet1.Range("AC3:AC" & EndLine).Font.Color = vbBlack
   Sheet1.Range("AC3:AC" & EndLine).Font.Bold = False
   
   Sheet1.Range("AG3:AG" & EndLine).Interior.Color = vbWhite
   Sheet1.Range("AG3:AG" & EndLine).Font.Color = vbBlack
   Sheet1.Range("AG3:AGC" & EndLine).Font.Bold = False
   
   Sheet1.Range("AA3:AA" & EndLine).ClearContents
   Sheet1.Range("AA3:AA" & EndLine).Interior.Color = vbWhite
   Sheet1.Range("AA3:AA" & EndLine).Font.Color = vbBlack
   
   
   Sheet1.Range("AB3:AB" & EndLine).ClearContents
   Sheet1.Range("AB3:AB" & EndLine).Interior.Color = vbWhite
   Sheet1.Range("AB3:AB" & EndLine).Font.Color = vbBlack
   
   Sheet1.Range("AD3:AD" & EndLine).ClearContents
   Sheet1.Range("AD3:AD" & EndLine).Interior.Color = vbWhite
   Sheet1.Range("AD3:AD" & EndLine).Font.Color = vbBlack
   
   Sheet1.Range("U3:U" & EndLine).ClearContents
   Sheet1.Range("U3:U" & EndLine).Interior.Color = vbWhite
   Sheet1.Range("U3:U" & EndLine).Font.Color = vbBlack
   
   Sheet1.Range("L3:L" & EndLine).ClearContents
   Sheet1.Range("L3:L" & EndLine).Interior.Color = vbWhite
   Sheet1.Range("L3:L" & EndLine).Font.Color = vbBlack
   
   
   Sheet1.Range("V3:V" & EndLine).ClearContents
   Sheet1.Range("V3:V" & EndLine).Interior.Color = vbWhite
   Sheet1.Range("V3:V" & EndLine).Font.Color = vbBlack
      
   Sheet1.Cells.Range("W3:W" & EndLine).ClearContents
   Sheet1.Cells.Range("W3:W" & EndLine).Interior.Color = vbWhite
   Sheet1.Range("W3:W" & EndLine).Font.Color = vbBlack
   
   Sheet1.Cells.Range("Y3:Y" & EndLine).ClearContents
   Sheet1.Cells.Range("Y3:Y" & EndLine).Interior.Color = vbWhite
   Sheet1.Range("Y3:Y" & EndLine).Font.Color = vbBlack
      
   Sheet1.Cells.Range("AE3:AE" & EndLine).ClearContents
   Sheet1.Cells.Range("AE3:AE" & EndLine).Interior.Color = vbWhite
   Sheet1.Range("AE3:AE" & EndLine).Font.Color = vbBlack
   
   Sheet1.Cells.Range("AF3:AF" & EndLine).ClearContents
   Sheet1.Cells.Range("AF3:AF" & EndLine).Interior.Color = vbWhite
   Sheet1.Range("AF3:AF" & EndLine).Font.Color = vbBlack
   

End Sub

Sub Change_Color(acells As Range, ACell As String, aColor As String, Aline As Integer)

  If aColor = "VbBlue" Then
    acells.Cells(Aline, ACell).Interior.Color = RGB(68, 114, 186)
  End If
  acells.Cells(Aline, ACell).Font.Color = vbWhite
  acells.Cells(Aline, ACell).Font.Bold = True
         
End Sub

Public Sub GravaEventos(AEvento As String, AceelsSheetBase As Range, AColumn As String)
  ValorFormatado = Format(AceelsSheetBase.Cells(i, AColumn).Value, "0000000000.00")
  ValorFormatado = Mid(ValorFormatado, 1, 10) & Mid(ValorFormatado, 12, 2)
  Print #1, Format(AceelsSheetBase.Cells(i, "A").Value, "0000") & Format(AceelsSheetBase.Cells(i, "B").Value, "00000") _
  & Format(AEvento, "000") & ValorFormatado
End Sub


Function ApuraDiasMes_MesAnterior(ByRef AQtdeDiasNoMes As Integer, ByRef AIsAdmitidoNoMesCompetencia As Boolean, ByRef AQtdeDiasNoMesAnterior As Integer, ByRef AIsAdmitidoNoMesAnterior As Boolean, Ai As Integer)

    dia = DatePart("d", Sheet1.Cells(Ai, "G").Value)
    mes = DatePart("m", Sheet1.Cells(Ai, "G").Value)
    ano = DatePart("yyyy", Sheet1.Cells(Ai, "G").Value)
    
    'Aqui, faz a leitura de parâmetros que se encontram na pasta "Parâmetros"
    'Para o Mes atual
    If ano = Year(Sheet18.Cells(3, "B").Value) And mes = Month(Sheet18.Cells(3, "B").Value) Then
      MontaUltimoDiaMesAdmissao = DateSerial(ano, mes, 30)
      AQtdeDiasNoMes = (MontaUltimoDiaMesAdmissao - Sheet1.Cells(Ai, "G").Value) + 1
      Sheet1.Cells(Ai, "J").Value = AQtdeDiasNoMes
      AIsAdmitidoNoMesCompetencia = True
      Call Change_Color(Sheet1.Cells, "J", ColorS, Ai)
    End If
      
       
    'Para o Mes anterior
    If ano = Year(Sheet18.Cells(3, "B").Value) And mes = Month(Sheet18.Cells(3, "B").Value) - 1 Then
      If mes = 1 Then
        ano = ano - 1
        mes = 12
      Else
        ano = Year(Sheet18.Cells(3, "B").Value)
        mes = Month(Sheet18.Cells(3, "B").Value) - 1
      End If
    
      MontaUltimoDiaMesAdmissao = DateSerial(ano, mes, 30)
      AQtdeDiasNoMesAnterior = (MontaUltimoDiaMesAdmissao - Sheet1.Cells(Ai, "G").Value) + 1
      Sheet1.Cells(Ai, "J").Value = QtdeDiasNoMesAnterior
      AIsAdmitidoNoMesAnterior = True
    
    Call Change_Color(Sheet1.Cells, "J", ColorS, Ai)
    
    End If

ApuraDiasMes_MesAnterior = 0

End Function

Public Function Apura_Piso(AQtdeDiasNoMes As Integer, AIsAdmitidoNoMesCompetencia As Boolean, AQtdeDiasNoMesAnterior As Integer, AIsAdmitidoNoMesAnterior As Boolean, Aline As Integer, acells As Range)

  Dim QtdeDias As Integer
  Dim Valor_Piso As Double
  Dim PisoDia As Double
  
  Valor_Piso = 0
  PisoDia = acells.Cells(Aline, "O").Value / 30
   
  
  If AIsAdmitidoNoMesCompetencia Then
    If AQtdeDiasNoMes >= 7 Then
      Valor_Piso = PisoDia * 7
    Else
      Valor_Piso = PisoDia * AQtdeDiasNoMes
    End If
  
  End If

  If (AIsAdmitidoNoMesAnterior) And (AQtdeDiasNoMesAnterior < 7) Then
    QtdeDias = 7 - AQtdeDiasNoMesAnterior
    Valor_Piso = PisoDia * QtdeDias
  End If
    
Apura_Piso = Valor_Piso

End Function



Public Sub verificaArquivoFeriasAberto(AAbreArquivoFerias As String)
  Dim WB1 As Workbook
  
  For Each WB1 In Workbooks
    If Workbooks.Count > 1 Then
      If WB1.Name = AAbreArquivoFerias Then
        Workbooks(AAbreArquivoFerias).Close
       
      End If
    End If
  Next WB1

End Sub


Public Sub open_close_SetPlanilhasAuxiliares(AAcao As Boolean)
  If AAcao Then
    Set WBV = Workbooks.Open(ThisWorkbook.Path & "\" & Sheet18.Cells(6, "B").Value)
    Set WBF = Workbooks.Open(ThisWorkbook.Path & "\" & Sheet18.Cells(5, "B").Value)
    Set WB = Workbooks.Open(ThisWorkbook.Path & "\" & Sheet18.Cells(4, "B").Value)
    
  Else
    WBV.Close
    WBF.Close
    
  End If
  Abrir = False
End Sub

Public Sub GravaTodosEventos()

  If WB.Worksheets(1).Cells(i, "AA").Value > 0 Then
     Call GravaEventos(5, WB.Worksheets(1).Cells, "AA")
  End If
    
  If WB.Worksheets(1).Cells(i, "AC").Value > 0 Then
    Call GravaEventos(78, WB.Worksheets(1).Cells, "AC")
  End If
 
  If WB.Worksheets(1).Cells(i, "AD").Value > 0 Then
    Call GravaEventos(75, WB.Worksheets(1).Cells, "AD")
  End If
 
  If WB.Worksheets(1).Cells(i, "AG").Value > 0 Then
    Call GravaEventos(233, WB.Worksheets(1).Cells, "AG")
  End If
 
  Call GravaEventos(144, WB.Worksheets(1).Cells, "W")
    
  If WB.Worksheets(1).Cells(i, "Q").Value > 0 Then
    Call GravaEventos(256, WB.Worksheets(1).Cells, "Q")
    Call GravaEventos(232, WB.Worksheets(1).Cells, "Q")
  End If
    
  If WB.Worksheets(1).Cells(i, "R").Value > 0 Then
    Call GravaEventos(133, WB.Worksheets(1).Cells, "R")
    Call GravaEventos(315, WB.Worksheets(1).Cells, "R")
  End If
    
  If WB.Worksheets(1).Cells(i, "T").Value > 0 Then
    Call GravaEventos(171, WB.Worksheets(1).Cells, "T")
    Call GravaEventos(314, WB.Worksheets(1).Cells, "T")
  End If
    

End Sub






'Coluna AA e AB respectivamente obtidas da planilha
'Vendas.xlsx Coluna que está em C:\Users\Robson\Documents\Planilhas para automação
'AA - P
'AB -Q porém,essa coluna AB não será considerada para geração dos eventos.
'AD - Utilizar a coluna R também de Vendas.xlsx

'Botão para gerar colunas em uma única aba/sheet
'e gerar um arquivo texto contendo todas as abas/eventos (em um único arquivo)

'Se a loja for Goiânia 175,  o cálculo será diferente para apurar o VT
'somente Salário Fixo

'Para as abas Prêmio William e Prêmio Clayton, utilizar os funcionários(vai conseguir fazer com que as pessoas sejam identificadas
'unicamente (Chapa )
'Localizar a pessoa na pasta principal, "Base 06-2021" para q a coluna H a K(Pasta do Clayton, por exemplo) seja gravada
' Sendo que a coluna I + J deve ser somada, trata do mesmo evento 078 gravado na Coluna AC
'Código de substuição, que na pasta do Clayton é coluna, foi enviado por e-mail

'Daqui para baixo - Grava Arquivo texto

'Colunas Q, R e T gerar duas linhas. pois trata-se de evento de entrada e saída.
'Coluna W, mesmo que seja ífen, ´precisa gerar o evento(VT) kiprokó/custipil do tal do prósoft
'Coluna K, Usuario vai tentar conseguir uma planilha que contenha os dados de férias para trazer para essa planilha
'O código do evento de substituição é 310.




